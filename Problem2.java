/*
 *Project Euler problem set 2
 *http://projecteuler.net/problem=2 
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values 
 * do not exceed four million, find the sum of the even-valued terms.
 * 
 * How I approached this problem: 
 * 
 * Spent a lot of time trying to solve using a multivariable for loop
 * but that ended up being a dead end ultimately, still convinced 
 * a for loop can work in this scenario and maybe with fewer lines of code
 * but I ended up with a while loop to scan for the fib sequence by defining 
 * a third variable as the first two added together. Inside the while loop
 * there's an if statement to scan only for the even results
 * then the code sums the results together and prints them out.
 * 
 */

public class Problem2 
{
	public static void main(String[] args) 
	{
		long firstNum = 1;
		long secondNum = 2;
		long nextNum = firstNum + secondNum;
		long sum = 0;
		
		while(nextNum <= 4000000){
			
		nextNum = firstNum + secondNum;
		firstNum = secondNum;
		secondNum = nextNum;
			
		if(nextNum % 2 == 0){
			sum += nextNum;
		}
		}
		System.out.println(sum);
	}
}


